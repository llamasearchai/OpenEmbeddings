[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "openembeddings"
version = "0.1.0"
description = "Advanced embedding and retrieval research framework"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "Nik Jois", email = "nikjois@llamasearch.ai"}
]
maintainers = [
    {name = "Nik Jois", email = "nikjois@llamasearch.ai"}
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
keywords = ["embeddings", "retrieval", "nlp", "machine-learning", "research"]
requires-python = ">=3.8"
dependencies = [
    "numpy>=1.21.0,<2.0",
    "rank_bm25>=0.2.2",
    "torch>=2.0.0",
    "typer>=0.12.3",
    "rich>=13.7.0",
    "sentence-transformers>=2.2.0",
    "nltk>=3.8.0",
    "faiss-cpu>=1.7.4",
    "datasets>=2.14.0",
    "transformers>=4.30.0",
    "scikit-learn>=1.3.0",
    "pandas>=2.0.0",
    "tqdm>=4.65.0",
    "psutil>=5.9.0",
    "memory_profiler>=0.60.0",
]

[project.optional-dependencies]
research = [
    "beir>=2.0.0",
    "mteb>=1.2.0",
    "pytrec_eval>=0.5",
    "accelerate>=0.20.0",
    "evaluate>=0.4.0",
    "matplotlib>=3.7.0",
    "seaborn>=0.12.0",
    "plotly>=5.15.0",
    "wandb>=0.15.0",
    "tensorboard>=2.13.0",
    "spacy>=3.6.0",
    "tokenizers>=0.13.0",
    "line_profiler>=4.0.0",
    "py-cpuinfo>=9.0.0",
    "hydra-core>=1.3.0",
    "omegaconf>=2.3.0",
    "loguru>=0.7.0",
]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.4.0",
    "pre-commit>=3.3.0",
]
web = [
    "fastapi>=0.100.0",
    "uvicorn>=0.22.0",
    "gradio>=3.35.0",
    "streamlit>=1.25.0",
]
jupyter = [
    "jupyter>=1.0.0",
    "ipywidgets>=8.0.0",
    "notebook>=6.5.0",
    "jupyterlab>=4.0.0",
]
all = [
    "openembeddings[research,dev,web,jupyter]"
]

[project.urls]
Homepage = "https://github.com/nikjois/openembeddings"
Repository = "https://github.com/nikjois/openembeddings"
Documentation = "https://github.com/nikjois/openembeddings/blob/main/README.md"
"Bug Tracker" = "https://github.com/nikjois/openembeddings/issues"

[project.scripts]
openembeddings = "openembeddings.cli:_main"
openembeddings-research = "openembeddings.advanced_cli:_main"

[tool.setuptools.packages.find]
where = ["."]
include = ["openembeddings*"]
exclude = ["tests*"]

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["openembeddings"]
omit = [
    "*/tests/*",
    "*/test_*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "rank_bm25.*",
    "faiss.*",
    "beir.*",
    "mteb.*",
    "pytrec_eval.*",
    "memory_profiler.*",
    "line_profiler.*",
    "py_cpuinfo.*",
]
ignore_missing_imports = true

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    ".venv",
    "build",
    "dist",
    "*.egg-info",
] 